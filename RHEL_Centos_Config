#Install RHEl or centos with the Development packages
#If you forgot you can use yum group install

sudo yum upgrade

sudo yum grouplist
sudu yum grouplist hidden

sudo yum groupinstall "GroupPackage Name"

#Install Epel packages
sudo yum install epel-release


####DNF######
##Check to see what updates are available
sudo dnf check-update
#this should work too
sudo yum check-update


#Text graphical config of network after making a change you will need to restart network service
sudo nmtui
sudo systemctl restart network


#List all services
#Centos/RHEL V6.x
sudo service --status-all
sudo service --status-all | less or more
sudo service --status-all | grep ntpd
sudo service docker status

#Centos/RHEL V7.x
sudo systemctl start | stop | enable | mask 'service name'
sudo systemctl list-unit-files
sudo systemd-cgtop
chkconfig --list
chkconfig --list docker
##Enable Service
chkconfig docker on
##Disable service
chkconfig docker off

#Install open-vmtools
sudo yum install open-vm-tools

#Start openvmtools
sudo systemctl start vmtoolsd
sudo systemctl enable vmtoolsd

#Install NPM(which install nodejs) you must first install epel-release
sudo yum install npm

#The default firewall is now firewalld
#If firewalld is not installed
sudo yum install firewalld

#See the state of firewalld
firewall-cmd --state

sudo systemctl start firewalld
sudo systemctl enable firewalld

firewall-cmd --get-default-zone

firewall-cmd --get-active-zones
firewall-cmd --list-all

firewall-cmd --get-zones
firewall-cmd --zone=home --list-all

sudo firewall-cmd --zone=home --change-interface=eth0
#Permanently change zones edit below file and add ZONE=thezone at end of file
sudo nano /etc/sysconfig/network-scripts/ifcfg-eth0
sudo systemctl restart network.service
sudo systemctl restart firewalld.service

#Change default zone
sudo firewall-cmd --set-default-zone=home

#Get All services
firewall-cmd --get-services

#Add a service permanently
sudo firewall-cmd --zone=public --permanent --add-service=http

#Add a port
sudo firewall-cmd --zone=public --permanent --add-port=5000/tcp
sudo firewall-cmd --zone=public --permanent --add-port=4990-4999/udp
#list all open ports
sudo firewall-cmd --list-ports
#list all open services
sudo firewall-cmd --list-services
#list everything
sudo firewall-cmd --list-all

#Create your own zones
sudo firewall-cmd --permanent --new-zone=publicweb

##Reload the firewall
sudo firewall-cmd --reload

#Install python packages get pip first
sudo yum install python-pip

#using find command
sudo find
sudo find ./etc -name "hosts"
find ./test -name "abc.txt"
find ./test -name "*.php"

##Fedora has a tool gnome-tweak-tool
dnf install gnome-tweak-tool
##Then from terminal run
gnome-tweak-tool

####GREAT RESOURCE: https://www.server-world.info/en/

####List users on centos/rhel system
cat /etc/passwd


####List users on centos/rhel system
cat /etc/passwd

###List all groups on centos/rhel system(should work for ubuntu a well
cat /etc/group

###Installing Webmin the --no-check-certificate option is necessary if wgt does not trust the cert sourceforge bounces you around######
download .rpm from http://prdownloads.sourceforge.net/webadmin/webmin-1.820-1.noarch.rpm
wget --no-check-certificate http://prdownloads.sourceforge.net/webadmin/webmin-1.820-1.noarch.rpm
###Required Dependency for webmin
sudo yum install perl-Net-SSLeay
*Note is you use yum to install the .rpm file webmin.xxx.rpm it will locate the dependency for you and install it
***If you use RPM to install you will need to install the dependency first

###Webmin runs on port 10000 so you will need to open that up if you are using a firewall


################CHECK RPM PACKAGE UPDATE HISTORY######################################################
sudo rpm -q kernel --last
sudo rpm -q vim --last
sudo rpm -qa --last

################LIST ALL PACKAGES INSTALLED REF:https://www.tecmint.com/list-installed-packages-in-rhel-centos-fedora/####
sudo rpm -qa (or just rom -qa)
sudo rpm -qa | grep -i open(Look for all packages with open in the name)

yum list installed
yum list installed | grep -i open

#############################DMESG#################################################################
dmesg is used to write kermel messages to standard out
dmesg | less
dmesg | grep -i memory(check system memory)
dmesg | grep -i usb
dmesg | grep -i network
dmesg | grep -i dma(see if hdd isrunning in dma mode)
dmesg | grep -i 10(check for 10G NIC)

#############THE lspci tool can also be used to check all pci bus devices in our system#######################
lspci(ls + pci) if you get command not found you need to install the pciutils package
sudo yum install -y pciutils
lspci
lspci -m
lspci -t
lspci -k(kernel devices)
lspci -s 03:00
######the info returned can then be piped into dmesg to make certain our pci-e devices are registering correctly
ex. VMXNET 3 returned address 03:00 so we can run
dmesg | grep -i 03:00(-i means ignore case)

########ethtool###############################
ethtool eth0 or 'whatever your adapter is'


#####Check RSS################################
egrep 'CPU|eno123xxx' /proc/interrupts


######################ADDING ROOT CA TO RHEL/CENTOS#############################################
##I HAVE NOT TESTED THIS YET
##Export your root CA to .crt if on Windows it'll be exported as .cer you can use openssl to convert or if you exported the file
##as DER not "DER Binary" you can just change the extension
###Then just add the cert on RHEL/CentOS6 to /usr/local/share/ca-certificates on RHEL/CentOS7 to /etc/pki/ca-trust/source/anchor
##Then run update-ca-trust
#####HOPEFULLY I WILL BE ABLE TO TEST THIS SOON.##########



########USING AWK###################################################################
######Basic Format awk '/search_pattern/ { action_to_take_on_matches; another_action; }' file_to_parse
####Using it like cat
awk '{print}' /etc/fstab
awk '/UUID/' /etc/fstab


######################ENABLE NTP ON CENTOS7#############################################

sudo yum install ntp -y
sudo vim /etc/ntp.conf (You should not have to change anything here or you can add our own timeservers)
sudo systemctl start ntpd
sudo systemctl enable ntpd
#####ADD OUR FIREWALL RULES#########################
sudo firewall-cmd --add-service=ntp --permanent
sudo firewall-cmd --reload

###SEE IF IT'S WORKING
sudo ntpq -p



###################TUNED CONFIG#######################################
##If not installed
sudo yum install tuned

sudo tuned-adm list ##LIST ALL AVAILABLE
sudo tuned-adm profile 'Your new Profile'
sudo tuned-adm recommended

##########################TOP############################################
top -c then presss '1' shows all cpu's


############CPU INFO####################################################
cat /proc/cpuinfo


#######MEMORY INFO###################################
cat /proc/meminfo


####FOLDER SIZE INFO######
###got to the folder location you want to gather size information on and then run
sudo du -sh * | sort -n
###Or you can 
sudo du -h


##################IPTABLES#############################################################################
sudo iptables -S
sudo iptables -L
##Let's see our current policy
sudo iptables -L | grep policy
##Let's accept our traffic(this is the defauly behaviour)
sudo iptables --policy INPUT ACCEPT
sudo iptables --policy OUTPUT ACCEPT
sudo iptables --policy FORWARD ACCEPT

#####If you would like to drop all connections except the ones you specify
iptables --policy INPUT DROP
iptables --policy OUTPUT DROP
iptables --policy FORWARD DROP

##Drop connections from a specific IP or Subnet#####
sudo iptables -A INPUT -s 10.10.10.10 -j DROP
sudo iptables -A INPUT -s 10.10.10.0/24 -j DROP
sudo iptables -A INPUT -p tcp --dport ssh -s 10.10.10.10 -j DROP(Block SSH)
iptables -A INPUT -p tcp --dport 22 -s 10.10.10.10 -j DROP


Replace ACCEPT with DROP to block port:
## open port ssh tcp port 22 ##
iptables -A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT
iptables -A INPUT -s 192.168.1.0/24 -m state --state NEW -p tcp --dport 22 -j ACCEPT
 
## open cups (printing service) udp/tcp port 631 for LAN users ##
iptables -A INPUT -s 192.168.1.0/24 -p udp -m udp --dport 631 -j ACCEPT
iptables -A INPUT -s 192.168.1.0/24 -p tcp -m tcp --dport 631 -j ACCEPT
 
## allow time sync via NTP for lan users (open udp port 123) ##
iptables -A INPUT -s 192.168.1.0/24 -m state --state NEW -p udp --dport 123 -j ACCEPT
 
## open tcp port 25 (smtp) for all ##
iptables -A INPUT -m state --state NEW -p tcp --dport 25 -j ACCEPT
 
# open dns server ports for all ##
iptables -A INPUT -m state --state NEW -p udp --dport 53 -j ACCEPT
iptables -A INPUT -m state --state NEW -p tcp --dport 53 -j ACCEPT
 
## open http/https (Apache) server port to all ##
iptables -A INPUT -m state --state NEW -p tcp --dport 80 -j ACCEPT
iptables -A INPUT -m state --state NEW -p tcp --dport 443 -j ACCEPT
 
## open tcp port 110 (pop3) for all ##
iptables -A INPUT -m state --state NEW -p tcp --dport 110 -j ACCEPT
 
## open tcp port 143 (imap) for all ##
iptables -A INPUT -m state --state NEW -p tcp --dport 143 -j ACCEPT
 
## open access to Samba file server for lan users only ##
iptables -A INPUT -s 192.168.1.0/24 -m state --state NEW -p tcp --dport 137 -j ACCEPT
iptables -A INPUT -s 192.168.1.0/24 -m state --state NEW -p tcp --dport 138 -j ACCEPT
iptables -A INPUT -s 192.168.1.0/24 -m state --state NEW -p tcp --dport 139 -j ACCEPT
iptables -A INPUT -s 192.168.1.0/24 -m state --state NEW -p tcp --dport 445 -j ACCEPT
 
## open access to proxy server for lan users only ##
iptables -A INPUT -s 192.168.1.0/24 -m state --state NEW -p tcp --dport 3128 -j ACCEPT
 
## open access to mysql server for lan users only ##
iptables -I INPUT -p tcp --dport 3306 -j ACCEPT (Note -I will place this at the top of the file -A does an append to the end of the file)

######IPTABLES TUI#####################
###You can also configure with a TUI(test user interface)
sudo yum search all | grep setup*
sudo yum install -y system-config-firewall-tui

#######################FDISK A NEW DISK################################################################
###########NOTE YOU MIGHT HAVE TO RESCAN YOUR SCSI BUS TO SEE THE NEW DISK#############################
sudo fdisk -l (list all volumes)
sudo fdisk -l /dev/sda1 (just list that volume)
sudo fdisk /dev/sda1
####press g to create a gpt partition#############
#####press n to create a new partition and follow the prompts################
#####press l to list the hexcodes###########################################
####press t to change partition type#######################################
#####press w to write changes#################################
sudo mkfs.ext4 /dev/sda1 (lay down our filesystem)
sudo mkdir /Data
sudo mount /dev/sda1 /Data
###EDIT YOUR /ect/fstab file#######
/dev/sda1  /Data  ext4  defaults 0 0 


#####Wipe file system##################
sudo wipefs /dev/sdb (List the current signature)
##Wipe command####
sudo wipefs --all --force /dev/sdb
##backup before wiping###
sudo wipefs --all --force --backup /dev/sdb (Saved to $HOME/wipefs-{devname}-{offset}.bak)

####If your volume uses LVM this is a bit trickier######
##PVDISPLAY######
sudo pvdisplay (for LVM)
##Also
sudo lsblk
##See if we already have a file system
sudo file -s /dev/sdb1(if this returns 'data' then no file system is present must format disk)
sudo lvdisplay
sudo lvscan



######Create a symbolic link##############
ln -s /var/logs/apache/logs ./logs

###let's find all .conf files inside of /etc
sudo ls -l /etc/*.conf

######################################################################################################################
####Check versions###########
uname -a
cat /etc/redhat-release

#####Should work on both RHEL and Debian##########
lsb_release -a

####Clean up yum cache####
sudo yum clean all

####Let's see what's installed on our system
sudo rpm -qa | grep node


#############SELinux##################################################
sestatus
sestatus -v
sestatus -b (state of Booleans)
sestatus -b | grep gluster | grep on$ or off$
getenforce(See current execution policy)
sudo setenforce enforcing
##Modes
Enforcing, Permissive(watch don't do anything), Disabled



##config file location####
/etc/sysconfig/selinux(which is symbolic link to /etc/selinux/config
sudo cat /var/log/messages | grep "SELinux is preventing" 
sudo cat /var/log/messages | grep SELinux 
sudo semodule -l | less (list modules in memory)
sudo ls -l /etc/selinux/targeted/modules/active/modules/
getsebool virt_use_nfs
sudo setsebool virt_use_nfs on

sudo ls -l /etc/*.conf
###now###
sudo ls -Z /etc/*.conf

#####Source:  https://www.digitalocean.com/community/tutorials/an-introduction-to-selinux-on-centos-7-part-2-files-and-processes

#######MAKE SCRIPTS EXECUTABLE####################################################
chmod u+x script.sh(only the current user can run the script)
chmod x script.sh(this is equivalent to chmod a+x all users can run the script)


######################CURL EXAMPLES############################################
sudo yum install curl
curl http://localhost ##Show the output of a page
curl http://localhost > file.html
curl -o file.pdf http://www.localhost/file.pdf
curl -O http://localhost/file.pdf (this will name the file the same as the URL content you are downloading)
curl -O http://localhost/file2.pdf -O http://localhost/file3.pdf

curl -L http://www.google.com (Follow redirects)
curl -C - -O http://localhost/largefile.iso (Continue downloading our large file from where we left off)
curl --limit-rate 1000B -O http://localhost/largefile.ISO (limit-rate of file downloads)
curl -z 21-Jan-17 http://localhost/file.pdf (only download file if modified after the given date)
curl -z -21-Jan-17 http://localhost/file.pdf (only download file if modified before given date)
curl -u ftpuser:ftppass -O ftp://localhost.file.pdf
curl -v http://www.google.com
curl -i http://www.google.com (get http headers)

#####SOURCE:  http://www.thegeekstuff.com/2012/04/curl-examples/?utm_source=feedburner


######SCP################################################
scp -r /directory/ user@192.168.1.1:/directory (recursively copy all data from /directory on the source to /directory on the destination,
if the folder does not exist on dest then it will be created)
scp -r . root@server:/data  ###copy all data recursively from the current directory and copy it to /data on remote host


######################LINUX PERMISSIONS#############################################
###logged in as root
mkdir /Permissions
touch file.txt
chown bob file.txt (make bob the owner of file.txt)
chown root bob.txt (remove bob's rights to write to the file)
chown bob file.txt (give him ownership back)
chown bob:bob file.txt (give user bob and group bob ownership of the file)
chown :bob file.txt (only give bob group ownership of the file)
chown root /foo (change ownership of folder foo to root)
chown root:www-data /foo (give root ownership and the group www-data to folder foo)
chown -R root:www-data /foo (give root ownership and the group www-data to folder subfolder and files to foo) -R(Recursively)
chown -R bob /foo (give bob full rights to folder foo and all subfiles and folders)

chmod -R 0777 /mydirectory ##Grant everyone read & write


###############USER CREATION################################################################
#Source:  https://www.centos.org/docs/5/html/5.1/Deployment_Guide/s2-users-add.html


useradd jdoe  ##Add user joe
useradd joe -u 1000 ##Add user joe and assign ID of 1000
passwd joe  ##set password for joe


###DELETE USER##############################
sudo userdel user

##############CRONTAB###################

sudo crontab -e
##head over here to generate your config http://crontab-generator.org/


###########MOUNT NFS DATASTORE#################################
##########REF: https://www.howtoforge.com/nfs-server-and-client-on-centos-7
sudo yum install -y nfs-utils

sudo mount -t nfs 192.168.1.1:/mnt/data(server mount) /mnt/data(client mount)


###########CREATE SIMPLE NFS SERVER AND EXPORT NON 4.0 NFS MOUNT POINT######
sudo mkdir /nfs
sudo yum install -y nfs-utils
sudo systemctl enable nfs-server(This might be all you need to start)
sudo systemctl enable rpcbind
sudo systemctl start nfs-server && sudo systemctl start rpcbind(again you might only need to start nfs-server)

##Then you need to edit the exports file#################
sudo vim /etc/exports

###/etc/exports example#####
/nfs    192.168.1.5(rw,async,no_root_squash)

###The above will allow 192.168.1.5 to access the nfs mount point(instead of an IP you can add '*' for all)
sudo systemctl restart nfs-server
sudo firewall-cmd --zone=public --permanent --add-service=nfs
sudo firewall-cmd --zone=public --permanent --add-service=mountd
sudo firewall-cmd --zone=public --permanent --add-service=rpc-bind
sudo firewall-cmd --reload


#####CREATE SIMPLE NFSV4.0 NOT WORKING!!#####################
sudo mkdir /nfsv4
sudo yum install -y nfs-utils nfs4-acl-tools portmap
sudo vim /etc/exports
##add entries into the /etc/exports file
/sales  192.168.1.10(rw,async,no_root_squash,fsid=0)
sudo systemctl enable nfs-server(This might be all you need to start)
sudo systemctl enable rpcbind
sudo systemctl enable nfs-idmap
sudo systemctl start nfs-server && sudo systemctl start rpcbind(again you might only need to start nfs-server)
sudo systemctl start nfs-idmap
sudo vim /etc/sysconfig/nfs
##set RPCNFSDCOUNT=16 OR 64
sudo firewall-cmd --zone=public --permanent --add-service=nfs
sudo firewall-cmd --zone=public --permanent --add-service=mountd
sudo firewall-cmd --zone=public --permanent --add-service=rpc-bind
sudo firewall-cmd --zone=public --permanent --add-port=2049/tcp
sudo firewall-cmd --zone=public --permanent --add-port=2049/udp
sudo firewall-cmd --reload


######MOUNT SMB SHARE###################################
#1. If your'e joined to a domain create a domain service account(smbtest)
#2. Give Everyone full control for share access and then give the service account Modify or Full for NTFS
#3. Now on linux
#4. Make a directory for our mount point
sudo /localmntpoint

##Add a user with UID of 5000
sudo useradd smbtest -u 5000
##Now create a group to add users to that will have access to
sudo groupadd -g 6000 sharegroup
##Now add all users that will have access to the share to that group
sudo usermod -G sharegroup -a smbtest && sudo usermod -G sharegroup -a user2
##Now your ready to mount
sudo mount.cifs \\\\server_DNS_OR_IP\\share /localmntpoint -o user=smbtest,uid=5000,gid=6000,domain=yourdomain
####NOTE THE DOMAIN IS VERY VERY IMPORTANT OR IT WILL FAIL, FOR ME THAT IS###########################
####NOTE FOR PERMISSIONS TO PROPAGATE PROPERLY MAKE CERTAIN THE USER ON WINDOWS MACHINE HAS A MATCHING ACCOUNT
####ON THE LINUX SYSTEM OR YOU WILL HAVE PERMISSION ISSUES##############
############WORKING WITH GROUPS##################################
##view all members in a group
getent group group1
##or if you want to view a user's group
id user

###MOUNT USB DRIVE################
sudo /mnt/USB ##create a mount point
sudo fdisk -l ##find your device
##mount it
sudo mount /dev/sdb1 /mnt/USB

###unmount it#########
sudo umount /dev/sdb1
or
sudo umount /mnt/USB


#####LET'S TAR A FOLDER##################
sudo tar -czf name_of_tar.tar.gz /folder_to_tar
##For large jobs your probably want to add the -v for some verbosity####
sudo tar -czvf name_of_tar.tar.gz /folder_to_tar

##########ADD USER TO SUDO###########
##as root
usermod -aG wheel 'username'


#########CHECK OS NAME/VERSION#######################
hostnamectl
rpm --query centos-release
cat /etc/centos-release
cat /etc/os-release


####COPY A FILE WHILE KEEPING PERMISSIONS###################
sudo cp -rp /some/path /some/otherpath ##-p same as --preserve=mode,ownership,timestamps




####PACKAGES WITH MULTIPLE .DEB FILES#############################
##I ran into an isssue while attempting to install LibreOffice6, it came with a ton of .deb files
##So I didn't know which one to start with, after reading the docs I found out you can do this.
cd /directorywithrpms
sudo yum install -y *.rpm
##Or
sudo rpm -Uvh *.rpm ##Shouldn't this be sudo rpm -ivh *.rpm

##Simple


#####SSH REMOVE ENTRY FROM KNOW_HOSTS FILE##############################
ssh-keygen -f "/home/user/.ssh/known_hosts" -R "IPAddressofRemoteHost"




####################USING NMCLI REF:https://www.tecmint.com/configure-network-connections-using-nmcli-tool-in-linux/#####
sudo nmcli con show ##show all connections
sudo nmcli dev show ##show all devices
sudo nmcli con show -a ##only show active connections

#####add a new connection and set it to static#######
sudo nmcli con add type ethernet con-name static-prod ifname eth0 ip4 192.168.1.10/24 gw4 192.168.1.1 ipv4.dns "192.168.1.1"

####Mod a connection change it's DNS to google#############
sudo nmcli con mod static-prod ipv4.dns "8.8.8.8 8.8.4.4"

sudo nmcli con down static2; nmcli con up static2 ####down and up a connection

###Delete a connection
sudo nmcli con delete UID  ##Note the UID can be found by running nmcli con show

####USING hostnamectl REF: https://www.cyberciti.biz/faq/rhel-redhat-centos-7-change-hostname-command/#########
###Please note all above commands require NetworkManager to be installed, which should be the default for centos installs##
hostnamectl status # list current host name
hostnamectl set-hostname newhstname --static ##set new hostname
sudo systemctl restart systemd-hostnamed  ##Restart service


#################INSTALL PYTHON3 REF:https://www.digitalocean.com/community/tutorials/how-to-install-python-3-and-set-up-a-local-programming-environment-on-centos-7
###############Since centos 7 only includes stable releases, it comes with python 2.x
###If you haven't done so already##
sudo yum install yum-utils -y
sudo yum groupinstall -y "Development Tools"

###This project is similat to epel-release they have current and edge packages####
sudo yum -y install https://centos7.iuscommunity.org/ius-release.rpm
sudo yum install -y python36u
sudo yum install -y python36u-pip
sudo yum -y install python36u-devel

##You can now install packages using
sudo pip3.6 install packagename


#######CD to user home directory################
##you can cd into a users' home directory with
cd ~theuser

##############Check and generate new machine id#################
##This is an issue I came across when creating a master template to be cloned, all my clones had the same machine-id
##Also this applies to CentOS/RHEL 7.1 and above REF:https://www.thegeekdiary.com/centos-rhel-7-how-to-change-the-machine-id/
sudo cat /etc/machine-id ##get the machine id
also
sudo hostnamectl status ##this will also show the machine id

###Now let's generate a new one
sudo rm /etc/machine-id
sudo systemd-machine-id-setup


####Changing your shell#######
##Can be defined in /etc/shells
echo $SHELL #should tell you you're current shell

###if you download a shell like zsh you can add it to /etc/shells it's usually located @
##/usr/local/bin/zsh check with
which zsh
####Let's change our shell
chsh -s $(which zsh) or
chsh -s /bin/bash ##change our shell to bash








