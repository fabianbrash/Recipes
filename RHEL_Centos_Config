#Install RHEl or centos with the Development packages
#If you forgot you can use yum group install

sudo yum upgrade

sudo yum grouplist
sudu yum grouplist hidden

sudo yum groupinstall "GroupPackage Name"

#Install Epel packages
sudo yum install epel-release

#Text graphical config of network after making a change you will need to restart network service
sudo nmtui
sudo systemctl restart network


#List all services
#Centos/RHEL V6.x
sudo service --status-all
sudo service --status-all | less or more
sudo service --status-all | grep ntpd

#Centos/RHEL V7.x
sudo systemctl start | stop | enable | mask 'service name'
sudo systemctl list-unit-files
sudo systemd-cgtop
chkconfig --list

#Install open-vmtools
sudo yum install open-vm-tools

#Start openvmtools
sudo systemctl start vmtoolsd
sudo systemctl enable vmtoolsd

#Install NPM(which install nodejs) you must first install epel-release
sudo yum install npm

#The default firewall is now firewalld
#If firewalld is not installed
sudo yum install firewalld

#See the state of firewalld
firewall-cmd --state

sudo systemctl start firewalld
sudo systemctl enable firewalld

firewall-cmd --get-default-zone

firewall-cmd --get-active-zones
firewall-cmd --list-all

firewall-cmd --get-zones
firewall-cmd --zone=home --list-all

sudo firewall-cmd --zone=home --change-interface=eth0
#Permanently change zones edit below file and add ZONE=thezone at end of file
sudo nano /etc/sysconfig/network-scripts/ifcfg-eth0
sudo systemctl restart network.service
sudo systemctl restart firewalld.service

#Change default zone
sudo firewall-cmd --set-default-zone=home

#Get All services
firewall-cmd --get-services

#Add a service permanently
sudo firewall-cmd --zone=public --permanent --add-service=http

#Add a port
sudo firewall-cmd --zone=public --permanent --add-port=5000/tcp
sudo firewall-cmd --zone=public --permanent --add-port=4990-4999/udp
#list all permanent ports
sudo firewall-cmd --zone-public permanent --list-ports

#Create your own zones
sudo firewall-cmd --permanent --new-zone=publicweb

##Reload the firewall
sudo firewall-cmd --reload

#Install python packages get pip first
sudo yum install python-pip

#using find command
sudo find
sudo find ./etc -name "hosts"
find ./test -name "abc.txt"
find ./test -name "*.php"

##Fedora has a tool gnome-tweak-tool
dnf install gnome-tweak-tool
##Then from terminal run
gnome-tweak-tool

####GREAT RESOURCE: https://www.server-world.info/en/

####List users on centos/rhel system
cat /etc/passwd


####List users on centos/rhel system
cat /etc/passwd

###Installing Webmin the --no-check-certificate option is necessary if wgt does not trust the cert sourceforge bounces you around######
download .rpm from http://prdownloads.sourceforge.net/webadmin/webmin-1.820-1.noarch.rpm
wget --no-check-certificate http://prdownloads.sourceforge.net/webadmin/webmin-1.820-1.noarch.rpm
###Required Dependency for webmin
sudo yum install perl-Net-SSLeay
*Note is you use yum to install the .rpm file webmin.xxx.rpm it will locate the dependency for you and install it
***If you use RPM to install you will need to install the dependency first

###Webmin runs on port 10000 so you will need to open that up if you are using a firewall


################CHECK RPM PACKAGE UPDATE HISTORY######################################################
sudo rpm -q kernel --last
sudo rpm -q vim --last
sudo rpm -qa --last


#############################DMESG#################################################################
dmesg is used to write kermel messages to standard out
dmesg | less
dmesg | grep -i memory(check system memory)
dmesg | grep -i usb
dmesg | grep -i network
dmesg | grep -i dma(see if hdd isrunning in dma mode)
dmesg | grep -i 10(check for 10G NIC)

#############THE lspci tool can also be used to check all pci bus devices in our system#######################
lspci(ls + pci) if you get command not found you need to install the pciutils package
sudo yum install -y pciutils
lspci
lspci -m
lspci -t
lspci -k(kernel devices)
lspci -s 03:00
######the info returned can then be piped into dmesg to make certain our pci-e devices are registering correctly
ex. VMXNET 3 returned address 03:00 so we can run
dmesg | grep -i 03:00(-i means ignore case)

########ethtool###############################
ethtool eth0 or 'whatever your adapter is'


#####Check RSS################################
egrep 'CPU|eno123xxx' /proc/interrupts


######################ADDING ROOT CA TO RHEL/CENTOS#############################################
##I HAVE NO TESTED THIS YET
##Export your root CA to .crt if on Windows it'll be exported as .cer you can use openssl to convert or if you exported the file
##as DER not "DER Binary" you can just change the extension
###Then just add the cert on RHEL/CentOS6 to /usr/local/share/ca-certificates on RHEL/CentOS7 to /etc/pki/ca-trust/source/anchor
##Then run update-ca-trust
#####HOPEFULLY I WILL BE ABLE TO TEST THIS SOON.##########



########USING AWK###################################################################
######Basic Format awk '/search_pattern/ { action_to_take_on_matches; another_action; }' file_to_parse
####Using it like cat
awk '{print}' /etc/fstab
awk '/UUID/' /etc/fstab





