
######My kubernetes journey#################################
##REF:https://kubernetes.io/docs/tasks/


kubectl version
kubectl version --short
kubectl api-versions

kubectl get namespaces
kubectl get namespaces -A ##get all namespaces even system namespaces by default all your pods are created in the default namespace
kubectl get pods
kubectl get deployments
kubectl get services or kubectl get svc

##Get current context
kubectl config view
kubectl config current-context

#kubectl get - list resources
#kubectl describe - show detailed information about a resource
#kubectl logs - print the logs from a container in a pod
#kubectl exec - execute a command on a container in a pod

####After you create a deployment you can create a service so external users can access it
##But first after we deploy our deployment lets get the IP of the pods
kubectl get pods -o wide

###or to specify a label from our deployment
kubectl get pods -l app=nginx -o wide

##you can expose the service with
kubectl expose deployment/nginx-deployment

##or with a yaml file check my yaml repo

####Run a simple deployment without a yaml file
kubectl run kubernetes-bootcamp --image=gcr.io/google-samples/kubernetes-bootcamp:v1 --port=8080

###you can run the kubectl proxy command but it's best to look at services
kubectl proxy ##run in a different terminal
curl http://localhost:8001/version

###delete deployment
kubectl delete deployment my-deployment

###Create a custom namespace#############
#REF:https://www.assistanz.com/steps-to-create-custom-namespace-in-the-kubernetes/
kubectl create namespace mynamespace

###YAML###########
apiVersion: v1
kind: Namespace
metadata:
   name: mynamespace
   
##END YAML

###Deploy a pod into our namespace
kubectl run ns-pod --image=nginx --port=80 --generator=run-pod/v1 -n mynamespace

kubectl get pods --namespace mynamespace

##Delete the pods in the namespace
kubectl delete pods --all --namespace mynamespace

##Delete namespace
kubectl delete namespace mynamespace

###Add to our .kube/config so we can switch namespaces
#REF:https://kubernetes.io/docs/tasks/administer-cluster/namespaces-walkthrough/

##Get current context
kubectl config view
kubectl config current-context

##You populate the below from the results of the 2 commands above

kubectl config set-context dev --namespace=development \
  --cluster=lithe-cocoa-92103_kubernetes \
  --user=lithe-cocoa-92103_kubernetes

kubectl config set-context prod --namespace=production \
  --cluster=lithe-cocoa-92103_kubernetes \
  --user=lithe-cocoa-92103_kubernetes


kubectl config view

kubectl config use-context dev

kubectl config current-context

####Now switch to prod
kubectl config use-context prod
